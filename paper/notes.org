* Reviews Authenticating and Discovery

  Till now I was thinking of writing reviews by customers to an IPNS
  location, so that once an IPNS name was resolved to an IPFS
  location, we had
  
  1. Authentication: The review is written by the same entity that
     owns the key to update the IPNS name published included in the
     payment transaction
  2. Discovery: Marketplaces and Chlu would poll the IPNS location to
     see if there was a review update available under the IPFS
     directory pointed to by the IPNS name

  Instead here is a new plan, it is abstract, so it can be implemented
  with validation added to orbitdb or an IPRS implementation

  1. Authentication: Use secret revealing to authenticate ownership of
     earlier review. Secret revealing along with Hash Pointers to put
     virtual timestamp will prevent customers from selling reviews.
  2. Discovery: Using flooding pubsub to publish updates to reviews
     which are listened to by anyone who wants to start replicating
     the review chains. Orbitdb allows loading the old state of the db
     and new participants can sync old state of the db, which will be
     interesting to support for our case too.

* Key sharing 

1. Can a market place deny vendors their feedback data by removing the
   S_v from the system?
   1. No. This is because the public key P_v is available at vendor's
      location and this is the key signed/certified by marketplace's
      certification key
      1. Marketplace has to store a root certification key at a well
         known location /.well-known/feedback_certification_key

** Options

   1. Marketplace creates a key pair and sends the public key to the
      vendor who saves it in his IPNS location, indirectly authorizing
      the marketplace's private key to sign on the vendor's behalf.
      1. Anyone can copy that public key and claim to be the vendor.
         1. Not a concern, as the PoPR links to the location of the
            key
   2. Vendor creates a key pair and sends the private key to the
      vendor
      1. The problem here is the shipping of private key to the
         marketplace.
      2. Again, anyone could copy the public key and claim to be the
         vendor.
         1. Not a concern, as the PoPR links to the location of the
            key


   3. What happens if the marketplace loses the certification key or
   shuts down and stops hosting the certification key?
   1. All the vendors will lost their ratings and reviews history, as
      they can't be verified. This is a no-go.
3. What other bad things can the marketplace do by changing the P_v?
4. Add a section about revocation of vendor encryption and signing
   keys
5. Popr includes ipfs location of the public key used to verify that
   the vendor signed the request or the marketplace did it on vendor's
   behalf
6. This key is the public key that market place generated for the
   vendor
7. And it is saved in the same ipns location as the P_ve
8. This way we don't send any private keys around + mktplace can't
   take away the public key needed to validate popr
9. We will need separate keys fur each marketplace and for P2P
   payments
10. We will need the vendor to sign the public key - but by saving it
    in his ipns the vendor is certifying it!
